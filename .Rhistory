json <- content(response, "text")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
}
consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
consulta_agape <- function(API, assunto){
df <- c()
for(pagina in 1:4){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
}
consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
debug(consulta_agape)
consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
View(df)
consulta_agape <- function(API, assunto){
df <- c()
for(pagina in 1:4){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
return(df)
}
consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
View(df)
consulta_agape <- function(API, assunto){
df <- c()
for(pagina in 1:100){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df_pagina <- data[["registros"]]
if(nrow(df_pagina) == 0){
break
}
df <- rbind(df, df_pagina)
}
return(df)
}
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
consulta_agape <- function(API, assunto){
df <- c()
for(pagina in 1:100){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df_pagina <- as.data.frame(data[["registros"]])
if(nrow(df_pagina) == 0){
break
}
df <- rbind(df, df_pagina)
}
return(df)
}
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
consulta_agape <- function(API, assunto){
df <- c()
for(pagina in 1:100){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df_pagina <- as.data.frame(data[["registros"]])
if(length(df_pagina) == 0){
break
}
df <- rbind(df, df_pagina)
}
return(df)
}
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
debug(consulta_agape)
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
View(df_pagina)
url <- paste0(prefeituras_agape[1,4])
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df <- data[["registros"]]
response <- GET(url)
View(response)
url <- paste0(prefeituras_agape[1,4], assuntos_agape[1,1], "?page_size=100&page=", 5)
url
url <- paste0(prefeituras_agape[1,4], assuntos_agape[1,1], "?page_size=100&page=", 4)
url
url <- paste0(prefeituras_agape[1,4], assuntos_agape[1,1], "?page_size=100&page=", 4)
response <- GET(url)
View(response)
json <- content(response, "text")
data <- fromJSON(json)
View(data)
data[1]
data['pagina_total']
consulta_agape <- function(API, assunto){
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
return(df)
}
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
source("~/GitHub/Julius/scr_R/dados.R")
consulta_agape <- function(API, assunto){
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
return(df)
}
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
url <- paste0(prefeituras_agape[1,4], assuntos_agape[1,1], "?page_size=100&page=", 4)
response <- GET(url)
json <- content(response, "text")
json <- content(response, "text", encoding = "UTF-8")
consulta_agape <- function(API, assunto){
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
return(df)
}
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
source("~/GitHub/Julius/scr_R/dados.R")
consulta_agape <- function(API, assunto){
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
return(df)
}
df <- consulta_agape(prefeituras_agape[1,4], assuntos_agape[1,1])
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_",)
}
}
}
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_",)
print(nome_tabela)
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
View(assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,1], "_",)
print(nome_tabela)
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,])
print(nome_tabela)
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
gera_agape <- function(prefeituras_agape, assuntos_agape) {
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,])
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,]))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape(prefeituras_agape, assuntos_agape)
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
_
gera_portaltp <- function(prefeituras_portaltp, assuntos_portaltp, periodo, meses = 1:12) {
conn <- dbConnect(SQLite(), dbname = "output_R/portaltp.db")
for (ano in periodo){
for (mes in meses){
for (prefeitura in 1:nrow(prefeituras_portaltp)){
for (assunto in 1:nrow(assuntos_portaltp)){
nome_tabela <- paste0(prefeituras_portaltp[prefeitura,3], "_",
assuntos_portaltp[assunto,], "_",
ano, "_",
mes)
df <- as.data.frame(consulta_portaltp(prefeituras_portaltp[prefeitura,4],
assuntos_portaltp[assunto,],
ano,
mes,
prefeituras_portaltp[prefeitura, 3]))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_portaltp[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
}
dbDisconnect(conn)
}
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,])
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,]))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
source("~/GitHub/Julius/scr_R/dados.R")
gera_agape(prefeituras_agape, assuntos_agape)
source("~/GitHub/Julius/scr_R/pacotes.R")
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira página e verifica o número de páginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
#consulta as páginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
return(df)
}
gera_agape(prefeituras_agape, assuntos_agape)
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira página e verifica o número de páginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
print(1)
#consulta as páginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
print(pagina)
}
return(df)
}
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,])
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,]))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira página e verifica o número de páginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
cat(1, "de", paginas)
#consulta as páginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
cat(pagina, "de", paginas)
}
return(df)
}
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,])
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,]))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira página e verifica o número de páginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
cat(1, "de", paginas, "\n")
#consulta as páginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
cat(pagina, "de", paginas, "\n")
}
return(df)
}
gera_agape(prefeituras_agape, assuntos_agape)
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
consulta <- "SELECT * FROM receitas"
resultado <- dbGetQuery(conn, consulta)
View(resultado)
consulta <- "SELECT * FROM orcamento_despesa"
resultado <- dbGetQuery(conn, consulta)
View(resultado)
