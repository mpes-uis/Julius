source("~/GitHub/Julius/scr_R/dados.R")
gera_agape(prefeituras_agape, assuntos_agape)
source("~/GitHub/Julius/scr_R/pacotes.R")
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira página e verifica o número de páginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
#consulta as páginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
}
return(df)
}
gera_agape(prefeituras_agape, assuntos_agape)
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira página e verifica o número de páginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
print(1)
#consulta as páginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
print(pagina)
}
return(df)
}
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,])
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,]))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira página e verifica o número de páginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
cat(1, "de", paginas)
#consulta as páginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
cat(pagina, "de", paginas)
}
return(df)
}
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,])
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,]))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira página e verifica o número de páginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
cat(1, "de", paginas, "\n")
#consulta as páginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
cat(pagina, "de", paginas, "\n")
}
return(df)
}
gera_agape(prefeituras_agape, assuntos_agape)
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
consulta <- "SELECT * FROM receitas"
resultado <- dbGetQuery(conn, consulta)
View(resultado)
consulta <- "SELECT * FROM orcamento_despesa"
resultado <- dbGetQuery(conn, consulta)
View(resultado)
View(assuntos_tectrilha)
View(prefeituras_tectrilha)
View(assuntos_agape)
View(assuntos_tectrilha)
url <- paste0(prefeituras_tectrilha[1,4])
url <- paste0(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2], assuntos_tectrilha[1,3])
url
url <- gsub("{unidadeGestoraId}", "1", url)
url <- gsub("{unidadeGestoraId}", "1", url)
url <- gsub("""{unidadeGestoraId}""", "1", url)
url <- gsub("{unidadeGestoraId}", "1", url)
url <- sub("{unidadeGestoraId}", "1", url)
url <- sub("\\{unidadeGestoraId\\}", "1", url)
gsub
?gsub
View(assuntos_tectrilha)
url
url <- paste0(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2], assuntos_tectrilha[1,3])
url <- sub("\\{unidadeGestoraId\\}", "1", url)
url <- sub("\\{exercicio\\}", "1", url)
url <- sub("\\{periodo\\", "1", url)
url <- sub("\\{periodo\\}", "1", url)
url
GET(url)
# Pacotes necessários
source("scr_r/pacotes.R")
source("scr_R/dados.R")
source("scr_R/consultas_API/funcoes_consultas.R")
url <- paste0(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2], assuntos_tectrilha[1,3])
url <- sub("\\{unidadeGestoraId\\}", "1", url)
url <- sub("\\{exercicio\\}", "1", url)
url <- sub("\\{periodo\\}", "1", url)
GET(url)
response <- GET(url)
View(response)
View(response)
url
View(prefeituras_tectrilha)
url <- paste0(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2], assuntos_tectrilha[1,3])
url <- sub("\\{unidadeGestoraId\\}", "3", url)
url <- sub("\\{exercicio\\}", "1", url)
url <- sub("\\{periodo\\}", "1", url)
url <- sub("\\{exercicio\\}", "2018", url)
url <- paste0(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2], assuntos_tectrilha[1,3])
url <- sub("\\{unidadeGestoraId\\}", "3", url)
url <- sub("\\{exercicio\\}", "2018", url)
url <- sub("\\{periodo\\}", "1", url)
response <- GET(url)
View(response)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
View(data)
View(assuntos_tectrilha)
consulta_tectrilha <- function(API, assunto, parametro, unidade_gestora, ano, mes){
url <- paste0(API, assunto, parametro)
url <- sub("\\{unidadeGestoraId\\}", unidade_gestora, url)
url <- sub("\\{exercicio\\}", ano, url)
url <- sub("\\{periodo\\}", mes, url)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
return(data)
}
View(prefeituras_tectrilha)
consulta_tectrilha(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2],
assuntos_tectrilha[1,3], prefeituras_tectrilha[1,6],
2020, 1)
df <- consulta_tectrilha(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2],
assuntos_tectrilha[1,3], prefeituras_tectrilha[1,6],
2020, 1)
df <- consulta_tectrilha(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2],
assuntos_tectrilha[1,3], prefeituras_tectrilha[1,6],
2020, 2)
df <- consulta_tectrilha(prefeituras_tectrilha[1,4], assuntos_tectrilha[1,2],
assuntos_tectrilha[1,3], prefeituras_tectrilha[1,6],
2018, 2)
df <- consulta_tectrilha(prefeituras_tectrilha[2,4], assuntos_tectrilha[2,2],
assuntos_tectrilha[2,3], prefeituras_tectrilha[2,6],
2018, 2)
View(df)
View(assuntos_tectrilha)
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
gera_tectrilha <- function(prefeituras_tectrilha, assuntos_tectrilha, periodo, meses = 1:12) {
conn <- dbConnect(SQLite(), dbname = "output_R/portaltp.db")
for (ano in periodo){
for (mes in meses){
for (prefeitura in 1:nrow(prefeituras_tectrilha)){
for (assunto in 1:nrow(assuntos_tectrilha)){
nome_tabela <- paste0(prefeituras_tectrilha[prefeitura,3], "_",
assuntos_tectrilha[assunto,], "_",
ano, "_",
mes)
df <- as.data.frame(consulta_tectrlha(prefeituras_tectrilha[prefeitura,4],
assuntos_tectrilha[assunto,2],
assuntos_tectrilha[assunto,3],
ano, mes,))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_tectrilha[assunto,2], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
}
}
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
consulta_tectrilha <- function(API, assunto, parametro, unidade_gestora, ano, mes){
url <- paste0(API, assunto, parametro)
url <- sub("\\{unidadeGestoraId\\}", unidade_gestora, url)
url <- sub("\\{exercicio\\}", ano, url)
url <- sub("\\{periodo\\}", mes, url)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
return(data)
}
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
consulta_tectrilha <- function(API, assunto, parametro, unidade_gestora, ano, mes){
url <- paste0(API, assunto, parametro)
url <- sub("\\{unidadeGestoraId\\}", unidade_gestora, url)
url <- sub("\\{exercicio\\}", ano, url)
url <- sub("\\{periodo\\}", mes, url)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
return(data)
}
source("~/GitHub/Julius/main_R.R")
gera_tectrilha <- function(prefeituras_tectrilha, assuntos_tectrilha, periodo, meses = 1:12) {
conn <- dbConnect(SQLite(), dbname = "output_R/portaltp.db")
for (ano in periodo){
for (mes in meses){
for (prefeitura in 1:nrow(prefeituras_tectrilha)){
for (assunto in 1:nrow(assuntos_tectrilha)){
nome_tabela <- paste0(prefeituras_tectrilha[prefeitura,3], "_",
assuntos_tectrilha[assunto,], "_",
ano, "_",
mes)
df <- as.data.frame(consulta_tectrlha(prefeituras_tectrilha[prefeitura,4],
assuntos_tectrilha[assunto,2],
assuntos_tectrilha[assunto,3],
ano, mes,))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_tectrilha[assunto,2], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
}
}
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
gera_tectrilha <- function(prefeituras_tectrilha, assuntos_tectrilha, periodo, meses = 1:12) {
conn <- dbConnect(SQLite(), dbname = "output_R/portaltp.db")
for (ano in periodo){
for (mes in meses){
for (prefeitura in 1:nrow(prefeituras_tectrilha)){
for (assunto in 1:nrow(assuntos_tectrilha)){
nome_tabela <- paste0(prefeituras_tectrilha[prefeitura,3], "_",
assuntos_tectrilha[assunto,], "_",
ano, "_",
mes)
df <- as.data.frame(consulta_tectrilha(prefeituras_tectrilha[prefeitura,4],
assuntos_tectrilha[assunto,2],
assuntos_tectrilha[assunto,3],
ano, mes,))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_tectrilha[assunto,2], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
}
}
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
gera_tectrilha <- function(prefeituras_tectrilha, assuntos_tectrilha, periodo, meses = 1:12) {
conn <- dbConnect(SQLite(), dbname = "output_R/portaltp.db")
for (ano in periodo){
for (mes in meses){
for (prefeitura in 1:nrow(prefeituras_tectrilha)){
for (assunto in 1:nrow(assuntos_tectrilha)){
nome_tabela <- paste0(prefeituras_tectrilha[prefeitura,3], "_",
assuntos_tectrilha[assunto,], "_",
ano, "_",
mes)
df <- as.data.frame(consulta_tectrilha(prefeituras_tectrilha[prefeitura,4],
assuntos_tectrilha[assunto,2],
assuntos_tectrilha[assunto,3],
ano, mes))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_tectrilha[assunto,2], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
}
}
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
debug(gera_tectrilha)
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
gera_tectrilha <- function(prefeituras_tectrilha, assuntos_tectrilha, periodo, meses = 1:12) {
conn <- dbConnect(SQLite(), dbname = "output_R/portaltp.db")
for (ano in periodo){
for (mes in meses){
for (prefeitura in 1:nrow(prefeituras_tectrilha)){
for (assunto in 1:nrow(assuntos_tectrilha)){
nome_tabela <- paste0(prefeituras_tectrilha[prefeitura,3], "_",
assuntos_tectrilha[assunto,2], "_",
ano, "_",
mes)
df <- as.data.frame(consulta_tectrilha(prefeituras_tectrilha[prefeitura,4],
assuntos_tectrilha[assunto,2],
assuntos_tectrilha[assunto,3],
ano, mes))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_tectrilha[assunto,2], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
}
}
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
debug(gera_tectrilha)
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
View(prefeituras_tectrilha)
gera_tectrilha <- function(prefeituras_tectrilha, assuntos_tectrilha, periodo, meses = 1:12) {
conn <- dbConnect(SQLite(), dbname = "output_R/portaltp.db")
for (ano in periodo){
for (mes in meses){
for (prefeitura in 1:nrow(prefeituras_tectrilha)){
for (assunto in 1:nrow(assuntos_tectrilha)){
nome_tabela <- paste0(prefeituras_tectrilha[prefeitura,3], "_",
assuntos_tectrilha[assunto,2], "_",
ano, "_",
mes)
df <- as.data.frame(consulta_tectrilha(prefeituras_tectrilha[prefeitura,4],
assuntos_tectrilha[assunto,2],
assuntos_tectrilha[assunto,3],
prefeituras_tectrilha[prefeitura,6],
ano, mes))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_tectrilha[assunto,2], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, " adicionada ao banco\n", "\033[0m")
}
}
}
}
}
}
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
debug(gera_tectrilha)
gera_tectrilha(prefeituras_tectrilha, assuntos_tectrilha, periodo)
View(df)
source("~/GitHub/Julius/scr_R/pacotes.R")
source("~/GitHub/Julius/scr_R/dados.R")
source("~/GitHub/Julius/scr_R/consultas_API/consulta_tectrilha.R")
source("~/GitHub/Julius/scr_R/gera_bancos/gera_tectrilha.R")
source("~/GitHub/Julius/scr_R/gera_bancos/gera_tectrilha.R")
source("~/GitHub/Julius/main_R.R")
source("~/GitHub/Julius/main_R.R")
inicio <- Sys.time()
fim <- Sys.time())
fim <- Sys.time()
tempo_total <- fim - inicio
tempo_total <- difftime(fim, inicio)
inicio <- Sys.time()
fim <- Sys.time()
tempo_total <- difftime(fim, inicio)
tempo_total
tempo_total
inicio <- Sys.time()
fim <- Sys.time()
inicio
fim
difftime(fim, inicio)
source("~/GitHub/Julius/main_R.R")
source("~/GitHub/Julius/main_R.R")
GET(http://wstransparencia.aracruz.es.gov.br/api/pessoal?exercicio=2018&periodo=1)
?GET
source("~/GitHub/Julius/main_R.R")
response <- GET(http://wstransparencia.aracruz.es.gov.br/api/pessoal?exercicio=2018&periodo=1, timeout = 10)
response <- GET("http://wstransparencia.aracruz.es.gov.br/api/pessoal?exercicio=2018&periodo=1", timeout = 10)
response <- GET("http://wstransparencia.aracruz.es.gov.br/api/pessoal?exercicio=2018&periodo=1", timeout(10))
source("~/GitHub/Julius/main_R.R")
