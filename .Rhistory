for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
url <- paste0(prefeituras_agape[prefeitura,4], assuntos_agape[assunto,], "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
paginas <- data[["pagina_total"]]
for(pagina in 1:paginas) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_pagina_", pagina)
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,], pagina))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, "de", paginas, "adicionada ao banco agape\n", "\033[0m")
log <- data.frame(tabelas_adicionadas = nome_tabela)
print(log)
}
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
url <- paste0(prefeituras_agape[prefeitura,4], assuntos_agape[assunto,], "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
paginas <- data[["pagina_total"]]
for(pagina in 1:paginas) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_pagina_", pagina)
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,], pagina))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, "de", paginas, "adicionada ao banco agape\n", "\033[0m")
log <- data.frame(tabelas_adicionadas = nome_tabela)
dbWriteTable(conn, name = log, value = log, append = TRUE)
}
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
url <- paste0(prefeituras_agape[prefeitura,4], assuntos_agape[assunto,], "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
paginas <- data[["pagina_total"]]
for(pagina in 1:paginas) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_pagina_", pagina)
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,], pagina))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, "de", paginas, "adicionada ao banco agape\n", "\033[0m")
log <- data.frame(tabelas_adicionadas = nome_tabela)
dbWriteTable(conn, name = "log", value = log, append = TRUE)
}
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
consulta <- "SELECT EXISTS (
SELECT 1
FROM log
WHERE tabela_adicionada = Anchieta_receitas_pagina_28
) AS linha_existe;"
resultado <- dbGetQuery(conn, consulta)
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
resultado <- dbGetQuery(conn, consulta)
consulta <- "SELECT EXISTS (
SELECT 1
FROM log
WHERE tabelas_adicionadas = Anchieta_receitas_pagina_28
) AS linha_existe;"
resultado <- dbGetQuery(conn, consulta)
consulta <- "SELECT EXISTS (
SELECT 1
FROM log
WHERE tabelas_adicionadas = 'Anchieta_receitas_pagina_28'
) AS linha_existe;"
resultado <- dbGetQuery(conn, consulta)
View(resultado)
consulta <- "SELECT EXISTS (
SELECT 1
FROM log
WHERE tabelas_adicionadas = 'Anchieta_receitas_pagina_29'
) AS linha_existe;"
resultado <- dbGetQuery(conn, consulta)
View(resultado)
nome_tabela <- teste_tabela
nome_tabela <- "teste_tabela"
consulta <- paste0("SELECT EXISTS (SELECT 1 FROM log WHERE tabelas_adicionadas = '",
nome_tabela, "') AS linha_existe;")
resultado <- c()
resultado <- dbGetQuery(conn, consulta)
View(resultado)
nome_tabela <- "Anchieta_receitas_pagina_28"
consulta <- paste0("SELECT EXISTS (SELECT 1 FROM log WHERE tabelas_adicionadas = '",
nome_tabela, "') AS linha_existe;")
resultado <- dbGetQuery(conn, consulta)
View(resultado)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
url <- paste0(prefeituras_agape[prefeitura,4], assuntos_agape[assunto,], "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
paginas <- data[["pagina_total"]]
for(pagina in 1:paginas) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_pagina_", pagina)
consulta <- paste0("SELECT EXISTS (SELECT 1 FROM log WHERE tabelas_adicionadas = '",
nome_tabela, "') AS linha_existe;")
resultado <- dbGetQuery(conn, consulta)
if (resultado = 0) {
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
url <- paste0(prefeituras_agape[prefeitura,4], assuntos_agape[assunto,], "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
paginas <- data[["pagina_total"]]
for(pagina in 1:paginas) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_pagina_", pagina)
consulta <- paste0("SELECT EXISTS (SELECT 1 FROM log WHERE tabelas_adicionadas = '",
nome_tabela, "') AS linha_existe;")
resultado <- dbGetQuery(conn, consulta)
if (resultado == 0) {
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,], pagina))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, "de", paginas, "adicionada ao banco agape\n", "\033[0m")
log <- data.frame(tabelas_adicionadas = nome_tabela)
dbWriteTable(conn, name = "log", value = log, append = TRUE)
}
}
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
url <- paste0(prefeituras_agape[prefeitura,4], assuntos_agape[assunto,], "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
paginas <- data[["pagina_total"]]
for(pagina in 1:paginas) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_pagina_", pagina)
consulta <- paste0("SELECT EXISTS (SELECT 1 FROM log WHERE tabelas_adicionadas = '",
nome_tabela, "') AS linha_existe;")
resultado <- dbGetQuery(conn, consulta)
if (resultado == 0) {
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,], pagina))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, "de", paginas, "adicionada ao banco agape\n", "\033[0m")
log <- data.frame(tabelas_adicionadas = nome_tabela)
dbWriteTable(conn, name = "log", value = log, append = TRUE)
}
}
else {
cat("\033[1;32m", nome_tabela, "de", paginas, "ja esta no banco agape\n", "\033[0m")
}
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
limpa_banco("output_R/agape.db")
limpa_banco <- function(banco) {
conn <- dbConnect(SQLite(), dbname = banco)
tabelas <- dbListTables(conn)
for (tabela in tabelas) {
dbExecute(conn, paste("DROP TABLE", tabela))
}
dbDisconnect(conn)
cat("O banco de dados foi limpo com sucesso.\n")
}
limpa_banco("output_R/agape.db")
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape(prefeituras_agape, assuntos_agape)
# Pacotes necessÃ¡rios
source("scr_r/pacotes.R")
source("scr_R/dados.R")
source("scr_R/consultas_API/funcoes_consultas.R")
source("scr_R/gera_bancos/funcoes_gera_banco.R")
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
log <- data.frame(tabelas_adicionadas = "")
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
url <- paste0(prefeituras_agape[prefeitura,4], assuntos_agape[assunto,], "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
paginas <- data[["pagina_total"]]
for(pagina in 1:paginas) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_pagina_", pagina)
consulta <- paste0("SELECT EXISTS (SELECT 1 FROM log WHERE tabelas_adicionadas = '",
nome_tabela, "') AS linha_existe;")
resultado <- dbGetQuery(conn, consulta)
if (resultado == 0) {
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,], pagina))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, "de", paginas, "adicionada ao banco agape\n", "\033[0m")
log <- data.frame(tabelas_adicionadas = nome_tabela)
dbWriteTable(conn, name = "log", value = log, append = TRUE)
}
}
else {
cat("\033[1;32m", nome_tabela, "de", paginas, "ja esta no banco agape\n", "\033[0m")
}
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
debug(gera_agape)
gera_agape(prefeituras_agape, assuntos_agape)
gera_agape <- function(prefeituras_agape, assuntos_agape) {
conn <- dbConnect(SQLite(), dbname = "output_R/agape.db")
log <- data.frame(tabelas_adicionadas = "")
dbWriteTable(conn, name = "log", value = log, append = TRUE)
for (prefeitura in 1:nrow(prefeituras_agape)) {
for (assunto in 1:nrow(assuntos_agape)) {
url <- paste0(prefeituras_agape[prefeitura,4], assuntos_agape[assunto,], "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
paginas <- data[["pagina_total"]]
for(pagina in 1:paginas) {
nome_tabela <- paste0(prefeituras_agape[prefeitura,3], "_",
assuntos_agape[assunto,], "_pagina_", pagina)
consulta <- paste0("SELECT EXISTS (SELECT 1 FROM log WHERE tabelas_adicionadas = '",
nome_tabela, "') AS linha_existe;")
resultado <- dbGetQuery(conn, consulta)
if (resultado == 0) {
df <- as.data.frame(consulta_agape(prefeituras_agape[prefeitura, 4],
assuntos_agape[assunto,], pagina))
if (nrow(df) != 0) {
dbWriteTable(conn, name = assuntos_agape[assunto,], value = df, append = TRUE)
cat("\033[1;32m", nome_tabela, "de", paginas, "adicionada ao banco agape\n", "\033[0m")
log <- data.frame(tabelas_adicionadas = nome_tabela)
dbWriteTable(conn, name = "log", value = log, append = TRUE)
}
}
else {
cat("\033[1;32m", nome_tabela, "de", paginas, "ja esta no banco agape\n", "\033[0m")
}
}
}
}
}
gera_agape(prefeituras_agape, assuntos_agape)
limpa_banco <- function(banco) {
conn <- dbConnect(SQLite(), dbname = banco)
tabelas <- dbListTables(conn)
for (tabela in tabelas) {
dbExecute(conn, paste("DROP TABLE", tabela))
}
dbDisconnect(conn)
cat("O banco de dados foi limpo com sucesso.\n")
}
limpa_banco("output_R/agape.db")
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
inicio_agape <- Sys.time()
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
View(assuntos_agape)
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
debug(consulta_agape)
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
View(assuntos_agape)
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
consulta_agape <- function(API, assunto){
#consulta a API, salva a primeira pÃ¡gina e verifica o nÃºmero de pÃ¡ginas
url <- paste0(API, assunto, "?page_size=100&page=", 1)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
paginas <- data[["pagina_total"]]
cat(1, "de", paginas, "\n")
#consulta as pÃ¡ginas seguintes e anexa ao data frame da primeira
for(pagina in 2:paginas){
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- rbind(df, data[["registros"]])
cat(pagina, "de", paginas, "\n")
}
return(df)
}
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
consulta_agape <- function(API, assunto, pagina) {
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
if (response["status_code"] == 200) {
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data.frame(data[["registros"]])
}
else {
df <- as.data.frame(c())
}
return(df)
}
consulta_agape <- function(API, assunto, pagina) {
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
if (response["status_code"] == 200) {
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data.frame(data[["registros"]])
}
else {
df <- as.data.frame(c())
}
return(df)
}
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
View(a)
gera_agape(prefeituras_agape, assuntos_agape)
consulta_agape <- function(API, assunto, pagina) {
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
if (response["status_code"] == 200) {
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- as.data.frame(data[["registros"]])
}
else {
df <- as.data.frame(c())
}
return(df)
}
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
View(a)
consulta_agape <- function(API, assunto, pagina) {
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
if (response["status_code"] == 200) {
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
}
else {
df <- as.data.frame(c())
}
return(df)
}
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
consulta_agape <- function(API, assunto, pagina) {
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
if (response["status_code"] == 200) {
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
}
else {
df <- as.data.frame(c())
}
if (is.na(df)){
df <- as.data.frame(c())
}
return(df)
}
a <- consulta_agape(prefeituras_agape[1, 4], assuntos_agape[5,], 18)
View(a)
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
source("~/GitHub/Julius/scr_R/limpa_banco.R")
is.na(a)
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
consulta_agape <- function(API, assunto, pagina) {
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
if (response["status_code"] == 200) {
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
if (is.na(df)){
df <- as.data.frame(c())
}
}
else {
df <- as.data.frame(c())
}
return(df)
}
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
consulta_agape <- function(API, assunto, pagina) {
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
if (response["status_code"] == 200) {
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
if (nrow(df) == 0){
df <- as.data.frame(c())
}
}
else {
df <- as.data.frame(c())
}
return(df)
}
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
consulta_agape <- function(API, assunto, pagina) {
url <- paste0(API, assunto, "?page_size=100&page=", pagina)
response <- GET(url)
if (response["status_code"] == 200) {
json <- content(response, "text", encoding = "UTF-8")
data <- fromJSON(json)
df <- data[["registros"]]
if (length(df) == 0){
df <- as.data.frame(c())
}
}
else {
df <- as.data.frame(c())
}
return(df)
}
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
limpa_banco("output_R/agape.db")
#banco agape
{
inicio_agape <- Sys.time()
gera_agape(prefeituras_agape, assuntos_agape)
fim_agape <- Sys.time()
tempo_agape <- difftime(fim_agape, inicio_agape)
}
